language: cpp
compiler:
  - gcc
  - clang

os:
  - linux
  - osx

dist: bionic
osx_image: xcode11.4

arch:
  - amd64
  - arm64

env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "PY2nEbgPiLlKzs5bojGmDE1KFjTQws504ZoEBh3O9AAJWfkEMQvhwfkO6wfp3hYXsQ4fZUfJM03CsJFxXiGk1oxXqBQ/lB1eKhf7GN8AY2giD+Ei6dD3hKbUwlmsbCk1YXryWsffrGwY/++0sRkgcYqAKHvQ1Z5POTNHNGMcg9M="
    - coverity_scan_run_condition='\( "$CC" = "gcc" \) -a \( $USECMAKE -eq 0 \) -a \( "$TRAVIS_OS_NAME" = "linux" \) -a \( "$(uname -i)" = "x86_64" \)'
    - coverity_scan_script_test_mode=false
    # Various conditions where the Travis CI scripts should behave differently
    - is_coverity_branch='\( "$TRAVIS_BRANCH" = "coverity_scan" \)'
    - is_valid_config='\( ! '"$is_coverity_branch"' \) -o \( '"$coverity_scan_run_condition"' \)'
    - is_valid_osx='\( "$TRAVIS_OS_NAME" = "osx" \) -a \( '"$is_valid_config"' \)'
    - is_valid_linux='\( "$TRAVIS_OS_NAME" = "linux" \) -a \( '"$is_valid_config"' \)'
    - is_amd64='\( "$(uname -i)" = "x86_64" \)'
    - is_arm64='\( "$(uname -i)" = "aarch64" \)'
    - is_notcoverity_autot='\( ! '"$is_coverity_branch"' \) -a \( $USECMAKE -eq 0 \)'
    - is_notcoverity_cmake='\( ! '"$is_coverity_branch"' \) -a \( $USECMAKE -eq 1 \)'
  jobs:
    # Let's test both our autoconf and CMake build system
    - USECMAKE=0
    - USECMAKE=1

jobs:
  exclude:
    # On Linux, we only need to test one compiler with both autools and CMake.
    # This gives us three builds on Linux: autotools+gcc, autotools+clang, CMake+gcc
    - compiler: clang
      os: linux
      env: USECMAKE=1
    # On macOS, gcc is deprecated, so we only build with clang there.
    # This gives us two builds on macOS: autotools+clang, CMake+clang
    - compiler: gcc
      os: osx
    # Do not compile for arm64 on osx yet.
    - arch: arm64
      os: osx

script:
  # environment
  - export CXXFLAGS="$CXXFLAGS -O2 -ggdb"
  - if eval [ $is_valid_osx ]; then export CXXFLAGS="$CXXFLAGS -isystem /usr/local/include"; fi
  # autotools build system: ./autogen.sh && ./configure && make && make check
  - if eval [ $is_notcoverity_autot ]; then ./autogen.sh; fi
  - if eval [ $is_notcoverity_autot ]; then ./configure || (cat config.log; exit 1); fi
  - if eval [ $is_notcoverity_autot ]; then make -j4; fi
  - if eval [ $is_notcoverity_autot ]; then echo "" > test-suite.log; make -j4 check || (cat test-suite.log; exit 1); fi
  # CMake build system: cmake . && make && make check
  - if eval [ $is_notcoverity_cmake ]; then cmake .; fi
  - if eval [ $is_notcoverity_cmake ]; then make -j4; fi
  - if eval [ $is_notcoverity_cmake ]; then make -j4 check; fi

addons:
  apt:
    packages:
    - libboost-all-dev
    - zlib1g-dev
    - liblzma-dev
    - libxml2-dev
  homebrew:
    packages:
    - zlib
    - xz
    - libxml2
  coverity_scan:
    build_script_url: https://raw.githubusercontent.com/$TRAVIS_REPO_SLUG/$TRAVIS_BRANCH/.travis_coverity.sh
    project:
      name: $TRAVIS_REPO_SLUG
    notification_email: drmccoy@drmccoy.de
    build_command_prepend: "./autogen.sh && ./configure"
    build_command: "make -j4 check"
    branch_pattern: coverity_scan

notifications:
  irc:
    channels:
      - secure: "l6ono4KSD0Kqy0J/OkKBxBLEzM0ZUFy+2Y9PY7yoVAeMTEv0gnlkndpLzkVebxnhq0aiKP0dqk4tQVGXq8nfaSTignWqa7LQ1WboqoDspJA6/uEMy0lazaQCU6T90m7Y8aTh8niyddgGstNkHJKJzlsBm93TMWj8qTB8ZzhmqaQ="
    on_success: change
    on_failure: always
    use_notice: true
